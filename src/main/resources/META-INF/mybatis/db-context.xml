<?xml version="1.0" encoding="euc-kr"?>

<!--
@Project : 
@File name : db-context.xml
@Date : 2018.10.06
@Author : 우나연
@Desc : db 설정 (aspectj, DBCP, 트랜잭션, mybatis -spring 연동(mapper)...)
-->		

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p"	    
    xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"	    
	xmlns:tx="http://www.springframework.org/schema/tx"	    
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="http://www.springframework.org/schema/beans   
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd
    http://www.springframework.org/schema/util 
    http://www.springframework.org/schema/util/spring-util.xsd" >
    
    <!-- aspectj 사용 -->
	<aop:aspectj-autoproxy proxy-target-class="true"/>


<!-- 	<tx:advice id="txAdvice" transaction-manager="transactionManager">
	    <tx:attributes>
		    <tx:method name="*" rollback-for="Exception" />
		</tx:attributes>
	</tx:advice>
	
	<aop:config>
		<aop:pointcut id="tranMethod"
		              expression="execution(public * kr.co.mlec..*ServiceImpl.*(..)) "/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="tranMethod" />
	</aop:config> -->
	
	
	<!-- DB 아이디 정보 -->
<!-- 	<context:property-placeholder 
		location="classpath:META-INF/mybatis/db.properties"/> -->
	<util:properties id="db" location="classpath:META-INF/mybatis/db.properties"/>
 		
	<!-- DBCP 사용 -->	
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		  destroy-method="close"
		  p:driverClassName="#{db['jdbc.mariadbaws.driver']}"
          p:url="#{db['jdbc.mariadbaws.url']}"
          p:username="#{db['jdbc.mariadbaws.username']}" 
          p:password="#{db['jdbc.mariadbaws.password']}"/> 

	<!-- 트랜잭션 처리	-->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!--클래스에 @Transactional 이 적용되어있다면 트랜잭션 처리	-->
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<!-- MyBatis와 Spring 연동 (sqlSessionFactory, sqlSessionTemplate) -->
	<!-- sqlmap 경로 설정, vo 경로 설정 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="typeAliasesPackage" value="tk.copyNpaste.vo" />			
		<property name="mapperLocations" value="classpath*:META-INF/sqlmap/*.xml" />
	</bean>
	
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory" />
	</bean>
	
	<!-- mapper를 인터페이스로 바꿈 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="tk.copyNpaste.mapper" />
	</bean>
</beans>

